customLabels: {}
image:
    sealfsManager:
        repository: luanshaotong/sealfs-manager
        tag: latest
        pullPolicy: IfNotPresent
    sealfsServer:
        repository: luanshaotong/sealfs-server
        tag: latest
        pullPolicy: IfNotPresent
    sealfsClient:
        repository: luanshaotong/sealfs-client
        tag: latest
        pullPolicy: IfNotPresent
    sealfsPlugin:
        repository: luanshaotong/sealfsplugin
        tag: latest
        pullPolicy: IfNotPresent
    csiProvisioner:
        repository: dyrnq/csi-provisioner
        tag: v3.5.0
        pullPolicy: IfNotPresent
    csiSnapshotter:
        repository: dyrnq/csi-snapshotter
        tag: v6.2.2
        pullPolicy: IfNotPresent
    livenessProbe:
        repository: dyrnq/livenessprobe
        tag: v2.10.0
        pullPolicy: IfNotPresent
    nodeDriverRegistrar:
        repository: dyrnq/csi-node-driver-registrar
        tag: v2.8.0
        pullPolicy: IfNotPresent
    externalSnapshotter:
        repository: dyrnq/snapshot-controller
        tag: v6.2.2
        pullPolicy: IfNotPresent

serviceAccount:
  create: true # When true, service accounts will be created for you. Set to false if you want to use your own.
  controller: csi-sealfs-controller-sa # Name of Service Account to be created or used

rbac:
  create: true
  name: sealfs

configmap:
  name: sealfs-manager-configmap
  all_servers:
  - 192.168.0.101
  - 192.168.0.102
  - 192.168.0.103


driver:
  name: sealfs.csi.k8s.io
  mountPermissions: 0

feature:
  enableFSGroupPolicy: true
  enableInlineVolume: false

kubeletDir: /var/lib/kubelet

controller:
  name: csi-sealfs-controller
  replicas: 1
  strategyType: Recreate
  runOnMaster: false
  runOnControlPlane: false
  livenessProbe:
    healthPort: 29652
  logLevel: 5
  workingMountDir: /tmp
  dnsPolicy: ClusterFirstWithHostNet  # available values: Default, ClusterFirstWithHostNet, ClusterFirst
  defaultOnDeletePolicy: delete  # available values: delete, retain
  affinity: {}
  nodeSelector: {}
  tolerations:
    - key: "node-role.kubernetes.io/master"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "node-role.kubernetes.io/controlplane"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "node-role.kubernetes.io/control-plane"
      operator: "Exists"
      effect: "NoSchedule"
  resources:
    csiProvisioner:
      limits:
        memory: 400Mi
      requests:
        cpu: 10m
        memory: 20Mi
    csiSnapshotter:
      limits:
        memory: 200Mi
      requests:
        cpu: 10m
        memory: 20Mi
    livenessProbe:
      limits:
        memory: 100Mi
      requests:
        cpu: 10m
        memory: 20Mi
    sealfs:
      limits:
        memory: 200Mi
      requests:
        cpu: 10m
        memory: 20Mi

node:
  name: csi-sealfs-node
  dnsPolicy: ClusterFirstWithHostNet  # available values: Default, ClusterFirstWithHostNet, ClusterFirst
  maxUnavailable: 1
  logLevel: 5
  livenessProbe:
    healthPort: 29653
  affinity: {}
  nodeSelector: {}
  tolerations:
    - operator: "Exists"
  resources:
    livenessProbe:
      limits:
        memory: 100Mi
      requests:
        cpu: 10m
        memory: 20Mi
    nodeDriverRegistrar:
      limits:
        memory: 100Mi
      requests:
        cpu: 10m
        memory: 20Mi
    sealfs:
      limits:
        memory: 300Mi
      requests:
        cpu: 10m
        memory: 20Mi

manager:
  name: csi-sealfs-manager
  replicas: 1
  runOnMaster: false
  runOnControlPlane: false
  port: 8081
  nodePort: 30056
  tolerations:
    - key: "node-role.kubernetes.io/master"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "node-role.kubernetes.io/controlplane"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "node-role.kubernetes.io/control-plane"
      operator: "Exists"
      effect: "NoSchedule"
  logLevel: warn
  virtual_nodes: 100
  resources:
    limits:
      memory: 100Mi
    requests:
      cpu: 10m
      memory: 20Mi

server:
  name: csi-sealfs-server
  replicas: 3
  runOnMaster: false
  runOnControlPlane: false
  dnsPolicy: ClusterFirstWithHostNet
  tolerations:
    - key: "node-role.kubernetes.io/master"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "node-role.kubernetes.io/controlplane"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "node-role.kubernetes.io/control-plane"
      operator: "Exists"
      effect: "NoSchedule"
  port: 28060
  strategyType: Recreate
  logLevel: warn
  affinity: {}
  nodeSelector: {}
  dataPath: /data/sealfs
  resources:
    limits:
      memory: 100Mi
    requests:
      cpu: 10m
      memory: 20Mi

externalSnapshotter:
  enabled: false
  name: snapshot-controller
  controller:
    replicas: 1
  resources:
    limits:
      memory: 300Mi
    requests:
      cpu: 10m
      memory: 20Mi
## Reference to one or more secrets to be used when pulling images
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
##
imagePullSecrets: []
# - name: "image-pull-secret"
